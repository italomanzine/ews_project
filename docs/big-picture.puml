@startuml

skinparam componentStyle rectangle
skinparam shadowing false

title Arquitetura do Sistema de Monitoramento do EWS

' Definição de componentes

package "Contêiner Docker" {
    [EWS (InteractiveEmergentSys.o)] as EWS
    [Cliente de Carga\n(ClientTextPattern.o)] as ClientLoad
}

component [Script de Monitoramento\n(ews_monitor.py)] as MonitorScript
component [Script de Plotagem\n(chart.py)] as ChartScript
component [Arquivos CSV\n(Métricas)] as CSVFiles
component [Gráficos Gerados\n(Charts)] as Charts

rectangle "Docker Daemon" as DockerDaemon
rectangle "API REST do EWS" as EWSAPI

' Relacionamentos

EWS -up-> DockerDaemon : Executa dentro de
ClientLoad -up-> DockerDaemon : Executa dentro de

MonitorScript -down-> DockerDaemon : Coleta métricas do contêiner
MonitorScript -right-> EWSAPI : Comunica via API REST
MonitorScript -down-> CSVFiles : Salva métricas em

EWSAPI -up-> DockerDaemon : Executa dentro de

ChartScript -down-> CSVFiles : Lê métricas de
ChartScript -down-> Charts : Gera gráficos em

' Notas

note bottom of EWS
  Iniciado pelo comando:
  dana -sp ../repository InteractiveEmergentSys.o
end note

note bottom of ClientLoad
  Iniciado pelo comando:
  dana ClientTextPattern.o
end note

note right of MonitorScript
  Utiliza a biblioteca pyews para interagir com a API REST do EWS.
  Aplica algoritmos de seleção de configuração:
  - UCB1
  - Força Bruta
  - Guloso (Greedy)
end note

note left of ChartScript
  Gera gráficos baseados nas métricas coletadas.
end note

@enduml
